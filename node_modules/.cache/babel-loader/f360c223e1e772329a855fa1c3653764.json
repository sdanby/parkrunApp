{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stevi\\\\parkrun_project\\\\parkrun-react-app\\\\src\\\\pages\\\\Athletes.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchAthleteData } from '../api/backendAPI';\n\n// Define the athlete type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Athletes = () => {\n  _s();\n  const [athletes, setAthletes] = useState([]);\n  useEffect(() => {\n    const getAthleteData = async () => {\n      try {\n        const data = await fetchAthleteData();\n        setAthletes(data);\n      } catch (error) {\n        console.error('Error fetching athlete data:', error);\n      }\n    };\n    getAthleteData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"athletes-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Athletes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: athletes.map(athlete => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: athlete.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"History: \", athlete.history]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Comparison: \", athlete.comparison]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, athlete.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Athletes, \"4QG3QOGkaT+71wZtzSumy+2IuUc=\");\n_c = Athletes;\nexport default Athletes;\nvar _c;\n$RefreshReg$(_c, \"Athletes\");","map":{"version":3,"names":["React","useEffect","useState","fetchAthleteData","jsxDEV","_jsxDEV","Athletes","_s","athletes","setAthletes","getAthleteData","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","athlete","name","history","comparison","id","_c","$RefreshReg$"],"sources":["C:/Users/stevi/parkrun_project/parkrun-react-app/src/pages/Athletes.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchAthleteData } from '../api/backendAPI';\n\n// Define the athlete type\ntype Athlete = {\n    id: number;\n    name: string;\n    history: string;\n    comparison: string;\n};\n\nconst Athletes: React.FC = () => {\n    const [athletes, setAthletes] = useState<Athlete[]>([]);\n\n    useEffect(() => {\n        const getAthleteData = async () => {\n            try {\n                const data = await fetchAthleteData();\n                setAthletes(data);\n            } catch (error) {\n                console.error('Error fetching athlete data:', error);\n            }\n        };\n\n        getAthleteData();\n    }, []);\n\n    return (\n        <div className=\"athletes-page\">\n            <h1>Athletes</h1>\n            <ul>\n                {athletes.map((athlete) => (\n                    <li key={athlete.id}>\n                        <h2>{athlete.name}</h2>\n                        <p>History: {athlete.history}</p>\n                        <p>Comparison: {athlete.comparison}</p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Athletes;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,gBAAgB,QAAQ,mBAAmB;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAY,EAAE,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACZ,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMR,gBAAgB,CAAC,CAAC;QACrCM,WAAW,CAACE,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IACJ,CAAC;IAEDF,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKS,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BV,OAAA;MAAAU,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBd,OAAA;MAAAU,QAAA,EACKP,QAAQ,CAACY,GAAG,CAAEC,OAAO,iBAClBhB,OAAA;QAAAU,QAAA,gBACIV,OAAA;UAAAU,QAAA,EAAKM,OAAO,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBd,OAAA;UAAAU,QAAA,GAAG,WAAS,EAACM,OAAO,CAACE,OAAO;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjCd,OAAA;UAAAU,QAAA,GAAG,cAAY,EAACM,OAAO,CAACG,UAAU;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHlCE,OAAO,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACZ,EAAA,CA9BID,QAAkB;AAAAoB,EAAA,GAAlBpB,QAAkB;AAgCxB,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}