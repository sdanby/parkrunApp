{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stevi\\\\parkrun_project\\\\parkrun-react-app\\\\src\\\\pages\\\\Results.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchResults } from 'parkrunAPI';\nimport './ResultsTable.css'; // Create this CSS file for sticky headers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Results = () => {\n  _s();\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    console.log('Fetching results...');\n    const getResults = async () => {\n      try {\n        const data = await fetchResults();\n        setResults(Array.isArray(data) ? data : []);\n      } catch (err) {\n        setError('Failed to fetch results');\n      } finally {\n        setLoading(false);\n      }\n    };\n    getResults();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (!results.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No results found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 33\n  }, this);\n\n  // Get unique event_codes and event_dates\n  const eventCodes = Array.from(new Set(results.map(r => r.event_code))).sort();\n  const eventDates = Array.from(new Set(results.map(r => r.event_date))).sort((a, b) => b.localeCompare(a)); // Latest first\n\n  // Build a lookup for last_position\n  const positionLookup = {};\n  results.forEach(r => {\n    if (!positionLookup[r.event_date]) positionLookup[r.event_date] = {};\n    positionLookup[r.event_date][r.event_code] = r.last_position;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Event Last Positions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"results-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"sticky-col sticky-header\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), eventCodes.map(code => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"sticky-header\",\n              children: code\n            }, code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: eventDates.map(date => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"sticky-col\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), eventCodes.map(code => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: positionLookup[date] && positionLookup[date][code] !== undefined ? positionLookup[date][code] : '-'\n            }, code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this))]\n          }, date, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Results, \"Q8/V7MttfdzyQqu8hKbJggI50EU=\");\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useEffect","useState","fetchResults","jsxDEV","_jsxDEV","Results","_s","results","setResults","loading","setLoading","error","setError","console","log","getResults","data","Array","isArray","err","children","fileName","_jsxFileName","lineNumber","columnNumber","length","eventCodes","from","Set","map","r","event_code","sort","eventDates","event_date","a","b","localeCompare","positionLookup","forEach","last_position","className","code","date","undefined","_c","$RefreshReg$"],"sources":["C:/Users/stevi/parkrun_project/parkrun-react-app/src/pages/Results.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchResults } from 'parkrunAPI';\nimport './ResultsTable.css'; // Create this CSS file for sticky headers\n\nconst Results: React.FC = () => {\n    const [results, setResults] = useState<any[]>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        console.log('Fetching results...');\n        const getResults = async () => {\n            try {\n                const data = await fetchResults();\n                setResults(Array.isArray(data) ? data : []);\n            } catch (err) {\n                setError('Failed to fetch results');\n            } finally {\n                setLoading(false);\n            }\n        };\n        getResults();\n    }, []);\n\n    if (loading) return <div>Loading...</div>;\n    if (error) return <div>{error}</div>;\n    if (!results.length) return <div>No results found.</div>;\n\n    // Get unique event_codes and event_dates\n    const eventCodes = Array.from(new Set(results.map(r => r.event_code))).sort();\n    const eventDates = Array.from(new Set(results.map(r => r.event_date)))\n        .sort((a, b) => b.localeCompare(a)); // Latest first\n\n    // Build a lookup for last_position\n    const positionLookup: { [key: string]: { [key: string]: number } } = {};\n    results.forEach(r => {\n        if (!positionLookup[r.event_date]) positionLookup[r.event_date] = {};\n        positionLookup[r.event_date][r.event_code] = r.last_position;\n    });\n\n    return (\n        <div className=\"page-content\">\n            <h1>Event Last Positions</h1>\n            <div className=\"results-table-container\">\n                <table className=\"results-table\">\n                    <thead>\n                        <tr>\n                            <th className=\"sticky-col sticky-header\">Date</th>\n                            {eventCodes.map(code => (\n                                <th key={code} className=\"sticky-header\">{code}</th>\n                            ))}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {eventDates.map(date => (\n                            <tr key={date}>\n                                <td className=\"sticky-col\">{date}</td>\n                                {eventCodes.map(code => (\n                                    <td key={code}>\n                                        {positionLookup[date] && positionLookup[date][code] !== undefined\n                                            ? positionLookup[date][code]\n                                            : '-'}\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\n\nexport default Results;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}